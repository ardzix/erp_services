# Generated by Django 4.2.3 on 2023-08-22 13:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('inventory', '0040_alter_stockmovementitem_buy_price'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sales', '0010_orderitem_unit'),
    ]

    operations = [
        migrations.CreateModel(
            name='CanvasingCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Order of customer visit in the trip', verbose_name='Order')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.customer')),
            ],
            options={
                'verbose_name': 'Canvasing Customer',
                'verbose_name_plural': 'Canvasing Customers',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CanvasingCustomerVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('on_progress', 'On Progress'), ('arrived', 'Arrived'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='waiting', max_length=50)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.customer')),
                ('sales_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sales.salesorder')),
            ],
            options={
                'verbose_name': 'Canvasing Customer Visit',
                'verbose_name_plural': 'Canvasing Customer Visits',
            },
        ),
        migrations.CreateModel(
            name='CanvasingTripTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name for the canvasing trip template', max_length=255, verbose_name='Name')),
                ('customers', models.ManyToManyField(help_text='Select customers for this trip template', through='sales.CanvasingCustomer', to='sales.customer', verbose_name='Customers')),
            ],
            options={
                'verbose_name': 'Canvasing Trip Template',
                'verbose_name_plural': 'Canvasing Trip Templates',
            },
        ),
        migrations.CreateModel(
            name='CanvasingTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for the canvasing trip', verbose_name='Date')),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('on_progress', 'On Progress'), ('arrived', 'Arrived'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='waiting', max_length=50)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canvasing_driver', to=settings.AUTH_USER_MODEL)),
                ('salesperson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canvasing_salesperson', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.canvasingtriptemplate')),
            ],
            options={
                'verbose_name': 'Canvasing Trip',
                'verbose_name_plural': 'Canvasing Trips',
            },
        ),
        migrations.CreateModel(
            name='CanvasingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(blank=True, max_length=128, null=True)),
                ('id32', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(db_index=True)),
                ('created_at_timestamp', models.PositiveIntegerField(db_index=True)),
                ('owned_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('owned_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('updated_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('published_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('unpublished_at', models.DateTimeField(blank=True, null=True)),
                ('unpublished_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('unapproved_at', models.DateTimeField(blank=True, null=True)),
                ('unapproved_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at_timestamp', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('on_progress', 'On Progress'), ('arrived', 'Arrived'), ('completed', 'Completed'), ('skipped', 'Skipped')], max_length=15)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_approved_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.customer')),
                ('customer_visit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='sales.canvasingcustomervisit')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('owned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_owner', to=settings.AUTH_USER_MODEL)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_published_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_site', to='sites.site')),
                ('sold_products', models.ManyToManyField(blank=True, to='sales.orderitem')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canvasing_reports', to='sales.canvasingtrip')),
                ('unapproved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_unapproved_by', to=settings.AUTH_USER_MODEL)),
                ('unpublished_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_unpublished_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Canvasing Report',
                'verbose_name_plural': 'Canvasing Reports',
            },
        ),
        migrations.AddField(
            model_name='canvasingcustomervisit',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.canvasingtrip'),
        ),
        migrations.CreateModel(
            name='CanvasingCustomerProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Intended quantity to sell to the customer', verbose_name='Intended Quantity')),
                ('canvasing_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.canvasingcustomer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
            ],
            options={
                'verbose_name': 'Canvasing Customer Product',
                'verbose_name_plural': 'Canvasing Customer Products',
            },
        ),
        migrations.AddField(
            model_name='canvasingcustomer',
            name='products',
            field=models.ManyToManyField(help_text='Select products intended for this customer', through='sales.CanvasingCustomerProduct', to='inventory.product', verbose_name='Products'),
        ),
        migrations.AddField(
            model_name='canvasingcustomer',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.canvasingtriptemplate'),
        ),
    ]
