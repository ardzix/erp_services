# Generated by Django 4.2.3 on 2024-06-02 03:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("hr", "0011_alter_locationtracker_employee"),
    ]

    operations = [
        migrations.AddField(
            model_name="employee",
            name="basic_salary",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                help_text="Enter the empployee's basic salary amount",
                max_digits=19,
            ),
        ),
        migrations.CreateModel(
            name="Salary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "id32",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(db_index=True)),
                ("created_at_timestamp", models.PositiveIntegerField(db_index=True)),
                (
                    "owned_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "owned_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "published_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unpublished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unpublished_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unapproved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unapproved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "pay_date",
                    models.DateField(
                        help_text="Enter the date when the salary was paid"
                    ),
                ),
                (
                    "salary",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter the total gross salary amount",
                        max_digits=19,
                    ),
                ),
                (
                    "incentive",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Enter the additional incentive amount",
                        max_digits=19,
                    ),
                ),
                (
                    "operational_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Enter the operational costs deducted",
                        max_digits=19,
                    ),
                ),
                (
                    "bonus",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Enter the bonus amount awarded",
                        max_digits=19,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        help_text="Select the employee associated with this salary record",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hr.employee",
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_published_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_site",
                        to="sites.site",
                    ),
                ),
                (
                    "unapproved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unapproved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unpublished_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unpublished_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Location Tracker",
                "verbose_name_plural": "Location Trackers",
                "ordering": ["-id"],
            },
        ),
    ]
