# Generated by Django 4.2.3 on 2024-05-28 13:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("common", "0013_alter_file_file"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sites", "0002_alter_domain_unique"),
        ("inventory", "0029_alter_product_sku"),
        ("purchasing", "0011_purchaseorder_billing_due_date_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="purchaseorder",
            name="down_payment_date",
            field=models.DateField(
                blank=True,
                help_text="Enter the down payment date for purchase order",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="supplier",
            name="has_payable",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="PurchaseOrderPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "id32",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(db_index=True)),
                ("created_at_timestamp", models.PositiveIntegerField(db_index=True)),
                (
                    "owned_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "owned_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "published_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unpublished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unpublished_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unapproved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unapproved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter the payment amount",
                        max_digits=19,
                    ),
                ),
                ("payment_date", models.DateField(help_text="Enter the payment date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                "authorize",
                                "Authorize: The payment has been authorized but not yet captured.",
                            ),
                            (
                                "capture",
                                "Capture: The authorized payment has been secured.",
                            ),
                            (
                                "settlement",
                                "Settlement: The payment process has been completed and funds have been transferred.",
                            ),
                            ("deny", "Deny: The payment request was denied."),
                            (
                                "pending",
                                "Pending: The payment process is ongoing and the final status is not yet determined.",
                            ),
                            (
                                "cancel",
                                "Cancel: The payment process was canceled before completion.",
                            ),
                            (
                                "refund",
                                "Refund: Funds have been returned to the payer.",
                            ),
                            (
                                "expired",
                                "Expired: The payment authorization has expired without capture.",
                            ),
                            (
                                "falure",
                                "Failure: The payment process encountered an error and was unsuccessful.",
                            ),
                        ],
                        default="pending",
                        help_text="Current status of the payment.",
                        max_length=255,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "payment_evidence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_payment_evidence",
                        to="common.file",
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_published_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        help_text="Select the invoice associated with the payment",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="purchasing.purchaseorder",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_site",
                        to="sites.site",
                    ),
                ),
                (
                    "unapproved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unapproved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unpublished_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unpublished_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Payable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "id32",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(db_index=True)),
                ("created_at_timestamp", models.PositiveIntegerField(db_index=True)),
                (
                    "owned_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "owned_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "updated_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "published_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unpublished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unpublished_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("unapproved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "unapproved_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deleted_at_timestamp",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter receivable amount",
                        max_digits=19,
                    ),
                ),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_approved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_deleted_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Select the order associated with the item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_payables",
                        related_query_name="orderitem",
                        to="purchasing.purchaseorder",
                    ),
                ),
                (
                    "owned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select the invoice associated with the payment",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inbounds",
                        to="purchasing.purchaseorderpayment",
                    ),
                ),
                (
                    "published_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_published_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select the invoice associated with the payment",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipment_payables",
                        to="purchasing.shipment",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_site",
                        to="sites.site",
                    ),
                ),
                (
                    "stock_movement",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select the invoice associated with the payment",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inbounds",
                        to="inventory.stockmovement",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Select the customer associated with the order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_payables",
                        to="purchasing.supplier",
                    ),
                ),
                (
                    "unapproved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unapproved_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unpublished_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_unpublished_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Payable",
                "verbose_name_plural": "Payables",
                "ordering": ["-id"],
            },
        ),
    ]
